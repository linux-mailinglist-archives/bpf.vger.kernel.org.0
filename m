Return-Path: <bpf-owner@vger.kernel.org>
X-Original-To: lists+bpf@lfdr.de
Delivered-To: lists+bpf@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 05CCB459877
	for <lists+bpf@lfdr.de>; Tue, 23 Nov 2021 00:37:48 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229709AbhKVXkx (ORCPT <rfc822;lists+bpf@lfdr.de>);
        Mon, 22 Nov 2021 18:40:53 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:58618 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229650AbhKVXkx (ORCPT <rfc822;bpf@vger.kernel.org>);
        Mon, 22 Nov 2021 18:40:53 -0500
Received: from mail-yb1-xb2f.google.com (mail-yb1-xb2f.google.com [IPv6:2607:f8b0:4864:20::b2f])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 43C93C061574
        for <bpf@vger.kernel.org>; Mon, 22 Nov 2021 15:37:46 -0800 (PST)
Received: by mail-yb1-xb2f.google.com with SMTP id v64so54461871ybi.5
        for <bpf@vger.kernel.org>; Mon, 22 Nov 2021 15:37:46 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20210112;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=BfAyVJ3cJVfTT2myVWz/jMktQfCq85CF7cMgcUWHAC8=;
        b=q1F1L6UXOoWfkj6aGsTk8GIycyFuaCHOhcOft1iKoreT02xHdm4pxfFLddo2W++HPi
         e2AfpW34mxrvdrQrOE9O53LL9BtzYKIU9Oq5DWUpTt3OZNc3zNWmW88+4JIrktxLjgLZ
         Jb/5mFVBNnB2ecNwSsoh3pHHr/Ykb1OqcDjFu1lcu0ntFpOI76M2rYBUZcmfuJU8MVp4
         DHcZQ+ooJpALPuqy1Fm/jLLJyYNqoNnfG4ILZ1d5k+PEsjLSgjJZD1UNNrJrn7M5DN7G
         Rm0rMQa4oNs0hsa0Ir35TmUQD0Wdl+lN7mWFGTczlBp4CfZSo3X8q/ZeTc46XBZEork7
         deUQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20210112;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=BfAyVJ3cJVfTT2myVWz/jMktQfCq85CF7cMgcUWHAC8=;
        b=mcgP+hopVDe6Lnpv3b+5f1zALTJBtWcX/rAOKN+b3qz+DDoaSO5R4mO/H8h+3wUUiQ
         ifROph+DIPL/PqCC5mqH3D3O4cDmSNleCOWj+kbmZOyMOCl2MpM3GtiDXmYqtYPQY8yj
         b4AYbo4PngcR1J22WozHIDE1MrG9LU0P8fkxxH19uwAUvp7E9oXobUJqyEWqC3OtfNtj
         jHUUr/i8Fc16ZIQ7euzYhhs4h310GoGSzW9vZZ1XBUa8pyQZXjzcgeXNI1wSMmqiavyR
         Gay4IRxW+Oy/OM9P//t3Q0I8pUd0fFA5TtE6x/mgUwkuH5d7FUjDz7ZI8pMypmz5pVR7
         4NHw==
X-Gm-Message-State: AOAM530iMeDlvHtJlGV02mK1Q8fgHAF4LgIH9zKgzRkN1KSJVzbw2L1U
        AIKKikqZ9rCV+iKZTdN5iOMrLYg62aGQd+yFhRw=
X-Google-Smtp-Source: ABdhPJwelHlGO0QZ0856RhwJZ53fZ0xQef1dLfXfKEyfapAQIxz4G7hGk5BYzCZy+QYRjuaDYq2sqpG0Q2F7+860Zqc=
X-Received: by 2002:a25:ccd4:: with SMTP id l203mr1140747ybf.225.1637624265336;
 Mon, 22 Nov 2021 15:37:45 -0800 (PST)
MIME-Version: 1.0
References: <20211120033255.91214-1-alexei.starovoitov@gmail.com> <20211120033255.91214-6-alexei.starovoitov@gmail.com>
In-Reply-To: <20211120033255.91214-6-alexei.starovoitov@gmail.com>
From:   Andrii Nakryiko <andrii.nakryiko@gmail.com>
Date:   Mon, 22 Nov 2021 15:37:34 -0800
Message-ID: <CAEf4BzYh0PjU8JJpaRNwQojAh1=V3_J=Ym+xUXdTnD2nGyPRrw@mail.gmail.com>
Subject: Re: [PATCH v3 bpf-next 05/13] bpf: Pass a set of bpf_core_relo-s to
 prog_load command.
To:     Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc:     "David S. Miller" <davem@davemloft.net>,
        Daniel Borkmann <daniel@iogearbox.net>,
        Andrii Nakryiko <andrii@kernel.org>, bpf <bpf@vger.kernel.org>,
        Kernel Team <kernel-team@fb.com>
Content-Type: text/plain; charset="UTF-8"
Precedence: bulk
List-ID: <bpf.vger.kernel.org>
X-Mailing-List: bpf@vger.kernel.org

On Fri, Nov 19, 2021 at 7:33 PM Alexei Starovoitov
<alexei.starovoitov@gmail.com> wrote:
>
> From: Alexei Starovoitov <ast@kernel.org>
>
> struct bpf_core_relo is generated by llvm and processed by libbpf.
> It's a de-facto uapi.
> With CO-RE in the kernel the struct bpf_core_relo becomes uapi de-jure.
> Add an ability to pass a set of 'struct bpf_core_relo' to prog_load command
> and let the kernel perform CO-RE relocations.
>
> Note the struct bpf_line_info and struct bpf_func_info have the same
> layout when passed from LLVM to libbpf and from libbpf to the kernel
> except "insn_off" fields means "byte offset" when LLVM generates it.
> Then libbpf converts it to "insn index" to pass to the kernel.
> The struct bpf_core_relo's "insn_off" field is always "byte offset".
>
> Signed-off-by: Alexei Starovoitov <ast@kernel.org>
> ---

Acked-by: Andrii Nakryiko <andrii@kernel.org>

>  include/linux/bpf.h            | 11 +++++
>  include/uapi/linux/bpf.h       | 59 +++++++++++++++++++++++++-
>  kernel/bpf/btf.c               | 10 +++++
>  kernel/bpf/syscall.c           |  2 +-
>  kernel/bpf/verifier.c          | 77 ++++++++++++++++++++++++++++++++++
>  tools/include/uapi/linux/bpf.h | 59 +++++++++++++++++++++++++-
>  tools/lib/bpf/relo_core.h      | 53 -----------------------
>  7 files changed, 215 insertions(+), 56 deletions(-)
>

[...]
