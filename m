Return-Path: <bpf-owner@vger.kernel.org>
X-Original-To: lists+bpf@lfdr.de
Delivered-To: lists+bpf@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id E301C41D323
	for <lists+bpf@lfdr.de>; Thu, 30 Sep 2021 08:16:38 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1348255AbhI3GSU (ORCPT <rfc822;lists+bpf@lfdr.de>);
        Thu, 30 Sep 2021 02:18:20 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:33218 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1348254AbhI3GST (ORCPT <rfc822;bpf@vger.kernel.org>);
        Thu, 30 Sep 2021 02:18:19 -0400
Received: from mail-pg1-x542.google.com (mail-pg1-x542.google.com [IPv6:2607:f8b0:4864:20::542])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 8704BC06161C
        for <bpf@vger.kernel.org>; Wed, 29 Sep 2021 23:16:37 -0700 (PDT)
Received: by mail-pg1-x542.google.com with SMTP id e7so5192625pgk.2
        for <bpf@vger.kernel.org>; Wed, 29 Sep 2021 23:16:37 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20210112;
        h=from:to:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=Pb2OlO3FWknzLv3NgAHRQB3w1rBIwUIdDtYVy8/uF8g=;
        b=jeKOknwf5pYwqmgYuM7Q9ZgP8N1//E1CutSqisSu+14FE6kQHHdED/wFY/0WEp5/tl
         NR0Rc5wkiugmwbyGOPY0rfsfOq4MhhbgGqBNMsNKWp9B4BaqlfCXu90cJbZZUW/O6YSA
         kdXlr0avqxCFtPK5m7DOptw9kG5g0Spu0z3N/ulh+Ypw5SMo3jh4GRtY6AhPJRfRTyKy
         mdPfZ0A3VF+dSWKUPFfTYzTP91ABcc6mIfVE2buH8DK8fqVidugm7F/+lLz7vMdc09Gi
         4oeAEaWcdilHSBrbMqcF/wRK3qcHPuLYSmhqufc9vEfZNz/GXC6O4HDU/oAkJyrjVT7p
         FjLQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20210112;
        h=x-gm-message-state:from:to:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=Pb2OlO3FWknzLv3NgAHRQB3w1rBIwUIdDtYVy8/uF8g=;
        b=OplyYxFOcJez3bJGJmHXFF383QQn7fA6ynJVB0c3bE5Mtfdk7XatVk8yNVdxIMYmoC
         pL7AtUFco6mJfCxxBIiylN47HSXo8/FDPPv79QqFCGUwIL+9UWicWUHnSnS3BBLuyudx
         YtbmGIDfzJfZkY4jaccYQ4LvdVa7Zdvo1xCFFobrZCst5kvzql97RsLdwssP9ajJsg85
         Pm2bmlj0Af9NXoU2kFD4meHhRPdWz4FYBNqUcuW1t4maizTTgDbYS68FonL2BLGUh2KB
         pWZdx78hUxebyV8qVoUpAepOAXGDuZHf1cPlA4rCj03Pq9SVHm5MaaUxpNKpTYXCzW89
         mlpg==
X-Gm-Message-State: AOAM530V0i8OAbdaiixbqNVdx3eYYvDJ6AIzevlpEnA+iiZdTXBfx8ZV
        DQ6n+FotAWWzbjEhT16PdY6XbHjIk+M=
X-Google-Smtp-Source: ABdhPJwdjUeBK0kfa38CYBqkgVrDB/t2XDsPYLdVtVdvOIXHSTLL/bbd4QkFiiCd3AQYOYkT+/Ocqg==
X-Received: by 2002:a63:d351:: with SMTP id u17mr3457618pgi.174.1632982596808;
        Wed, 29 Sep 2021 23:16:36 -0700 (PDT)
Received: from localhost ([2405:201:6014:d058:a28d:3909:6ed5:29e7])
        by smtp.gmail.com with ESMTPSA id 23sm1777141pfw.97.2021.09.29.23.16.36
        for <bpf@vger.kernel.org>
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Wed, 29 Sep 2021 23:16:36 -0700 (PDT)
From:   Kumar Kartikeya Dwivedi <memxor@gmail.com>
To:     bpf@vger.kernel.org
Subject: [PATCH bpf] libbpf: Fix segfault in light skeleton for objects without BTF
Date:   Thu, 30 Sep 2021 11:46:34 +0530
Message-Id: <20210930061634.1840768-1-memxor@gmail.com>
X-Mailer: git-send-email 2.33.0
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Precedence: bulk
List-ID: <bpf.vger.kernel.org>
X-Mailing-List: bpf@vger.kernel.org

When fed an empty BPF object, bpftool gen skeleton -L crashes at
btf__set_fd since it assumes presence of obj->btf, however for the
sequence below clang adds no .BTF section (hence no BTF).

Reproducer:
$ touch a.bpf.c
$ clang -O2 -g -target bpf -c a.bpf.c
$ bpftool gen skeleton -L a.bpf.o
/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */
/* THIS FILE IS AUTOGENERATED! */

struct a_bpf {
	struct bpf_loader_ctx ctx;
Segmentation fault (core dumped)

The same occurs for files compiled without BTF info, i.e. without
clang's -g flag.

Fixes: 67234743736a (libbpf: Generate loader program out of BPF ELF file.)
Signed-off-by: Kumar Kartikeya Dwivedi <memxor@gmail.com>
---
 tools/lib/bpf/libbpf.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/tools/lib/bpf/libbpf.c b/tools/lib/bpf/libbpf.c
index 0f85d441fca3..b6b130171b86 100644
--- a/tools/lib/bpf/libbpf.c
+++ b/tools/lib/bpf/libbpf.c
@@ -7031,7 +7031,8 @@ int bpf_object__load_xattr(struct bpf_object_load_attr *attr)

 	if (obj->gen_loader) {
 		/* reset FDs */
-		btf__set_fd(obj->btf, -1);
+		if (obj->btf)
+			btf__set_fd(obj->btf, -1);
 		for (i = 0; i < obj->nr_maps; i++)
 			obj->maps[i].fd = -1;
 		if (!err)
--
2.33.0

