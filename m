Return-Path: <bpf+bounces-44433-lists+bpf=lfdr.de@vger.kernel.org>
X-Original-To: lists+bpf@lfdr.de
Delivered-To: lists+bpf@lfdr.de
Received: from ny.mirrors.kernel.org (ny.mirrors.kernel.org [147.75.199.223])
	by mail.lfdr.de (Postfix) with ESMTPS id B64159C2F42
	for <lists+bpf@lfdr.de>; Sat,  9 Nov 2024 20:00:58 +0100 (CET)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ny.mirrors.kernel.org (Postfix) with ESMTPS id EF8301C20EBE
	for <lists+bpf@lfdr.de>; Sat,  9 Nov 2024 19:00:57 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id AA9CC19DFA5;
	Sat,  9 Nov 2024 19:00:53 +0000 (UTC)
X-Original-To: bpf@vger.kernel.org
Received: from mail.itouring.de (mail.itouring.de [85.10.202.141])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 5678213BC12
	for <bpf@vger.kernel.org>; Sat,  9 Nov 2024 19:00:49 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=85.10.202.141
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1731178853; cv=none; b=EnLoutYWqmsAtjoQr5DjOc00SfMIrpw/Yu3YpLCcwKdKT8w1RC2H6dILGTdY31YbbUl6bv7bVjYAQxiBjyzNz5lOfXos97rowzk9FRhTtt78GdMmCGsYiSJHpzsBoRjhfa2L1vJ3oYOAAAnG02Z7zXyWIKgJesUpLTaQ1X9iQYI=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1731178853; c=relaxed/simple;
	bh=RbmBsjyVdVipep8//kCJszLJENXj8/QhfbP7YFtwk98=;
	h=Subject:To:Cc:References:From:Message-ID:Date:MIME-Version:
	 In-Reply-To:Content-Type; b=LPqhlz/5IUqbgrtZQJ4smK8sdvOHRE/qJa/sJtYPBEgRm59e23D7KtZx8JUw38Ckr22vLsvTdVeFRh/RhIJ95fr/G7Gqq00gE4hDl6qGXVohlg/jk5Ft4i6vpaZLU6D6SMZJIKLvFWKVlLL+dq/K5W8vkwMEyQxrVbNcqVvKtIo=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=applied-asynchrony.com; spf=pass smtp.mailfrom=applied-asynchrony.com; arc=none smtp.client-ip=85.10.202.141
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=applied-asynchrony.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=applied-asynchrony.com
Received: from tux.applied-asynchrony.com (p5ddd7b29.dip0.t-ipconnect.de [93.221.123.41])
	by mail.itouring.de (Postfix) with ESMTPSA id 19DDA11DD55;
	Sat, 09 Nov 2024 20:00:47 +0100 (CET)
Received: from [192.168.100.221] (hho.applied-asynchrony.com [192.168.100.221])
	by tux.applied-asynchrony.com (Postfix) with ESMTP id 7AC0C600BCD01;
	Sat, 09 Nov 2024 20:00:46 +0100 (CET)
Subject: Re: Using gcc-bpf for bpftool: problems with CO-RE feature detection
To: "Jose E. Marchesi" <jose.marchesi@oracle.com>
Cc: bpf@vger.kernel.org, indu.bhagat@oracle.com
References: <8665818f-8a32-3796-1efc-1a9e5d036f18@applied-asynchrony.com>
 <87zfm8bdx2.fsf@oracle.com>
From: =?UTF-8?Q?Holger_Hoffst=c3=a4tte?= <holger@applied-asynchrony.com>
Organization: Applied Asynchrony, Inc.
Message-ID: <2aa58e90-a837-e075-8b13-65dc4fce42b8@applied-asynchrony.com>
Date: Sat, 9 Nov 2024 20:00:46 +0100
Precedence: bulk
X-Mailing-List: bpf@vger.kernel.org
List-Id: <bpf.vger.kernel.org>
List-Subscribe: <mailto:bpf+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:bpf+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
In-Reply-To: <87zfm8bdx2.fsf@oracle.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit

On 2024-11-09 17:02, Jose E. Marchesi wrote:
> 
> Hello.
> 
>> I'm trying to use Gentoo's bpf-toolchain - basically just gcc built for
>> the BPF target - to build the CO-RE support in bpftool, in order to
>> provide an alternative to clang.
>>
>> This currently fails because the feature detection relies on a comment
>> in the generated BPF assembly, which gcc does not seem to generate.
>>
>> While I'm using the Github mirror for bpftool, the same check is
>> being done in the kernel build, so it affects both.
>>
>> Our tracker bug with full output etc. is: https://bugs.gentoo.org/943113
>>
>> Basically the problem boils down to:
>>
>> 	.long	16777248                        # 0x1000020
>> 	.long	9                               # BTF_KIND_VAR(id = 3)
>> 	.long	234881024                       # 0xe000000
>>
>> generated by clang (19.1.3)
>>
>> vs.
>>
>> 	.4byte	0x1000020
>> 	.4byte	0x9
>> 	.4byte	0xe000000
>>
>> generated by gcc (14.2.0).
>>
>> As the values themselves are correct, the problem is really just
>> the missing debug information in gcc's output. So far I've tried
>> every option I could find, but to no avail. I have no idea whether
>> this is because I'm holding it wrong, gcc cannot do it for the bpf
>> target (yet?) or anything else.
>>
>> Does anybody know how I can convince gcc to generate symbol comments?
>> Alternatively can we find a better way to verify the generated output
>> instead of grepping for a comment?
> 
> GCC can generate similar comments if you pass the -dA option.  These are
> intended for testing the generated BTF in the GCC testsuite, however,
> and right now I don't remember whether the comments mimic what clang
> generates.  You can give it a try...

Thank you so much for your reply, that's the one flag I hadn't tried yet,
and it does indeed output exactly the needed value.

After a bit of creative Makefile surgery I now get:

..
Makefile.feature:32: Probing: feature-clang-bpf-co-re
Makefile.feature:33: printf '%s\n' 'struct s { int i; } __attribute__((preserve_access_index)); struct s foo = {};' | bpf-unknown-none-gcc -g -dA -S -o - -x c -  | grep -q BTF_KIND_VAR && (echo 1 && >&2 echo result: 1) || (echo 0 && >&2 echo result: 0)
result: 1
..

There's a few things to clean up like clang-specific annotations and LLVM_STRIP,
but so far the resulting binary says:

   bpftool v7.5.0
   using libbpf v1.5
   features: libbfd, skeletons

so it seems to have worked. \o/

cheers
Holger

