Return-Path: <bpf-owner@vger.kernel.org>
X-Original-To: lists+bpf@lfdr.de
Delivered-To: lists+bpf@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 1C3BE453D6C
	for <lists+bpf@lfdr.de>; Wed, 17 Nov 2021 02:05:02 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229544AbhKQBH6 (ORCPT <rfc822;lists+bpf@lfdr.de>);
        Tue, 16 Nov 2021 20:07:58 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:43672 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229543AbhKQBH6 (ORCPT <rfc822;bpf@vger.kernel.org>);
        Tue, 16 Nov 2021 20:07:58 -0500
Received: from mail-yb1-xb33.google.com (mail-yb1-xb33.google.com [IPv6:2607:f8b0:4864:20::b33])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 70227C061570
        for <bpf@vger.kernel.org>; Tue, 16 Nov 2021 17:05:00 -0800 (PST)
Received: by mail-yb1-xb33.google.com with SMTP id y3so2265542ybf.2
        for <bpf@vger.kernel.org>; Tue, 16 Nov 2021 17:05:00 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20210112;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=QScWFhAyt7JisOGMTxhfvpHler0Yi2xqmrRkLfwleis=;
        b=Vy8MUq8ADpjwUy0YMF8hKOzkRYXIoNLEjjEUA9Mmp2CQZKPs/5kjb87dgf5/qKlZLC
         DiJdRXkECh/fbRoiXDJh6CmFlA2mv4MsZQ7R8tnKIoFWG1kdJuxpYURxQcS+kytDAgW9
         YzX/SHBv+SBJ5wKfpFXIaC20FSix47R2K0mJ75QSlvKBGlRzR4zKdn9pJJALiLmfhX6+
         V7q1Hq6iqHZwAtyVO/p3SOW7mxIF46L9j+JH1rYSaZ12u9wn1apjXoUbyTyqlN/xeN8s
         KZE64UMtwPcMi0MqmOVXAro+UQEoLE35dr4Q3KKzmswDEXiegj59RmgneETmK7IF1xzi
         JC/A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20210112;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=QScWFhAyt7JisOGMTxhfvpHler0Yi2xqmrRkLfwleis=;
        b=LQZOFgDhJVBRiJLpXJa3NZpEzDNHvd54P8MrZr+OcbZzS/qQJ63EHI1zwaBsYWDV++
         La507PaOQAaKqws7tzDr/ctbTPFn1fgV2QePCJ/CIn+uVDZfngTSjoqhmaQwQdvo06Ru
         qRw7ChsKJ4mM59OVzg5g1keT8jiY7MH+/Cd6Gz2p9twSdwIW1zyxr0xiUbNLrLut2ugU
         4Fp4Zy4IHshG2wLmN9bJtQamXWvGLkCZ2DpaBJRq4GJIzeXWafy4xZY3ESBbiO6MVdnz
         RD+jQeXlKyR/ThskcOG+uzqao7QOcwvUFA9sgPVx1Kel5G5cbyGT7UENOJizBlS4Qint
         HEIA==
X-Gm-Message-State: AOAM533/nImGew9eUDnaIjBQ7oqAhWx3h2d0/qf/38cCSDdscFvEVP+8
        YYPWyTDDNO1/iwAOBnh6UgBtkqvxf8Wo58bdV9qOucQZ
X-Google-Smtp-Source: ABdhPJyk9NnYN4GvcAuNXm4XvcobNiCGpWIUVBmptZ+YMoZFJqD3vC4haewk/ZnzKtaZQ7jDzInan1+Ue+IvkB5ByIY=
X-Received: by 2002:a25:cec1:: with SMTP id x184mr13269526ybe.455.1637111099673;
 Tue, 16 Nov 2021 17:04:59 -0800 (PST)
MIME-Version: 1.0
References: <20211112050230.85640-1-alexei.starovoitov@gmail.com> <20211112050230.85640-5-alexei.starovoitov@gmail.com>
In-Reply-To: <20211112050230.85640-5-alexei.starovoitov@gmail.com>
From:   Andrii Nakryiko <andrii.nakryiko@gmail.com>
Date:   Tue, 16 Nov 2021 17:04:48 -0800
Message-ID: <CAEf4BzYNCt4EyvXv2ktpW5Un5=Mr+gNavMLXDKF0VL5iEnqYeg@mail.gmail.com>
Subject: Re: [PATCH v2 bpf-next 04/12] bpf: Define enum bpf_core_relo_kind as uapi.
To:     Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc:     "David S. Miller" <davem@davemloft.net>,
        Daniel Borkmann <daniel@iogearbox.net>,
        Andrii Nakryiko <andrii@kernel.org>, bpf <bpf@vger.kernel.org>,
        Kernel Team <kernel-team@fb.com>
Content-Type: text/plain; charset="UTF-8"
Precedence: bulk
List-ID: <bpf.vger.kernel.org>
X-Mailing-List: bpf@vger.kernel.org

On Thu, Nov 11, 2021 at 9:02 PM Alexei Starovoitov
<alexei.starovoitov@gmail.com> wrote:
>
> From: Alexei Starovoitov <ast@kernel.org>
>
> enum bpf_core_relo_kind is generated by llvm and processed by libbpf.
> It's a de-facto uapi.
> With CO-RE in the kernel the bpf_core_relo_kind values become uapi de-jure.
> Also rename them with BPF_CORE_ prefix to distinguish from conflicting names in
> bpf_core_read.h. The enums bpf_field_info_kind, bpf_type_id_kind,
> bpf_type_info_kind, bpf_enum_value_kind are passing different values from bpf
> program into llvm.
>
> Signed-off-by: Alexei Starovoitov <ast@kernel.org>
> Acked-by: Andrii Nakryiko <andrii@kernel.org>
> ---
>  include/uapi/linux/bpf.h       | 19 ++++++++
>  tools/include/uapi/linux/bpf.h | 19 ++++++++
>  tools/lib/bpf/libbpf.c         |  2 +-
>  tools/lib/bpf/relo_core.c      | 84 +++++++++++++++++-----------------
>  tools/lib/bpf/relo_core.h      | 18 --------
>  5 files changed, 81 insertions(+), 61 deletions(-)
>

[...]

> index 3b9f8f18346c..7720af11f96f 100644
> --- a/tools/lib/bpf/relo_core.h
> +++ b/tools/lib/bpf/relo_core.h
> @@ -4,24 +4,6 @@
>  #ifndef __RELO_CORE_H
>  #define __RELO_CORE_H

Can you please add #include <linux/bpf.h> here for enum
bpf_core_relo_kind? It should be fine for both libbpf and kernel
modes. Implicit #include dependency is very confusing.

>
> -/* bpf_core_relo_kind encodes which aspect of captured field/type/enum value
> - * has to be adjusted by relocations.
> - */
> -enum bpf_core_relo_kind {
> -       BPF_FIELD_BYTE_OFFSET = 0,      /* field byte offset */
> -       BPF_FIELD_BYTE_SIZE = 1,        /* field size in bytes */
> -       BPF_FIELD_EXISTS = 2,           /* field existence in target kernel */
> -       BPF_FIELD_SIGNED = 3,           /* field signedness (0 - unsigned, 1 - signed) */
> -       BPF_FIELD_LSHIFT_U64 = 4,       /* bitfield-specific left bitshift */
> -       BPF_FIELD_RSHIFT_U64 = 5,       /* bitfield-specific right bitshift */
> -       BPF_TYPE_ID_LOCAL = 6,          /* type ID in local BPF object */
> -       BPF_TYPE_ID_TARGET = 7,         /* type ID in target kernel */
> -       BPF_TYPE_EXISTS = 8,            /* type existence in target kernel */
> -       BPF_TYPE_SIZE = 9,              /* type size in bytes */
> -       BPF_ENUMVAL_EXISTS = 10,        /* enum value existence in target kernel */
> -       BPF_ENUMVAL_VALUE = 11,         /* enum value integer value */
> -};
> -
>  /* The minimum bpf_core_relo checked by the loader
>   *
>   * CO-RE relocation captures the following data:
> --
> 2.30.2
>
