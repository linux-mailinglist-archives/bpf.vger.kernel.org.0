Return-Path: <bpf-owner@vger.kernel.org>
X-Original-To: lists+bpf@lfdr.de
Delivered-To: lists+bpf@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 5D3D6207BFF
	for <lists+bpf@lfdr.de>; Wed, 24 Jun 2020 21:06:39 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2404473AbgFXTGi (ORCPT <rfc822;lists+bpf@lfdr.de>);
        Wed, 24 Jun 2020 15:06:38 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:37208 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2404079AbgFXTGi (ORCPT <rfc822;bpf@vger.kernel.org>);
        Wed, 24 Jun 2020 15:06:38 -0400
Received: from mail-qv1-xf41.google.com (mail-qv1-xf41.google.com [IPv6:2607:f8b0:4864:20::f41])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 243ACC061573;
        Wed, 24 Jun 2020 12:06:37 -0700 (PDT)
Received: by mail-qv1-xf41.google.com with SMTP id u8so1556082qvj.12;
        Wed, 24 Jun 2020 12:06:37 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=wctE+UWcTu3XkocKT+xXpTuOCJCmfuygZGIcDc8Gshs=;
        b=cf7o7FGsAwYteyXM0XgvS+eJhIej7GWj3QYSy5dho+IvVyifrZUEucnWLE72Tfm8HH
         dHSZANE48EdrqBIYFTrqNXEo9eZJhXmZl94UnLxLnhIzSg80b4sCvhjh6CtB2Et7M6uD
         rkwd7o++7GOXXDyd9FdQTJUAAbcjJHe6j+5Dvlg/5haka/TDwkiu5JzunwahJjWAQmBZ
         q7djFlglsr0FzcZz3SXAUmda1gic/6RZv4vcgFVuDf/qHiH+jmfnjTwaE3GHui2AA6YQ
         2m38oKgmQ7vil/xx/MIRIZkPycC9yLUWBtgPLKQ3TJZxWXDuaa1rYEjM/AUu3yFJpDfj
         DNyg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=wctE+UWcTu3XkocKT+xXpTuOCJCmfuygZGIcDc8Gshs=;
        b=pJxJsl/+kFVquXjLSpifGJ6AvHaT19H8ICss4gWJOmnRFZx+GhPHHSdFr3KMaP1+m4
         DTBBvI1IWnZ2Ih1DwbGjshi1oG4G+Is62fr6wf2Msj0UqcCa9j96177zfKd4b/iL6OTu
         MuDOi3KZDX2oX3hG669Uuh5VbZ1NXPK/XvZ3+mxszOxnP6pFrH1S/D4G70ShJrunUVTg
         6QhpEUeGX1WpQ10G8ViWIKulAcmh2M0YR0Ify25oXwxFGR82hIaugP4oliHThkEmuV+9
         8NrG8aOmybnPpyTfmZJS0OHpDUJRFkKmtxf6GRbcam5Rus71gylpHEhsCbgqB/QW8rvF
         Pnrw==
X-Gm-Message-State: AOAM533kh7qGBBlbr3OEpD2Z1jhvSDg8VABEfNmNh13bNzaPWh8PRzrv
        vayITpocGFJaHTmC8hOoWZdg0/kO2lXqGZCcEHg=
X-Google-Smtp-Source: ABdhPJwwPIlHLIJ2rmjeGLgzSEN6Enjw2r/16VUmRDomeonaHG9ni21Fd05CWH8YRQ+IJuH0voH02JyCab3p3HMUajc=
X-Received: by 2002:a0c:f388:: with SMTP id i8mr32537430qvk.224.1593025596091;
 Wed, 24 Jun 2020 12:06:36 -0700 (PDT)
MIME-Version: 1.0
References: <CACAyw9-cinpz=U+8tjV-GMWuth71jrOYLQ05Q7_c34TCeMJxMg@mail.gmail.com>
 <CAEf4BzbSc-wykq1_62CQwtszO+76rkudz_B=GkzE6ZheMUAusw@mail.gmail.com>
 <20200624175754.GD20203@kernel.org> <CAEf4BzY8b71tE5B4rw5sfy=xajtgqUGHVaoHNf_YzVtQ9aLCBg@mail.gmail.com>
 <20200624185737.GA25807@kernel.org>
In-Reply-To: <20200624185737.GA25807@kernel.org>
From:   Andrii Nakryiko <andrii.nakryiko@gmail.com>
Date:   Wed, 24 Jun 2020 12:06:24 -0700
Message-ID: <CAEf4Bza=ZT1yZvoJNMK72pYm6VGwGp22detc7kgC_24OBt4-FA@mail.gmail.com>
Subject: Re: pahole generates invalid BTF for code compiled with recent clang
To:     Arnaldo Carvalho de Melo <arnaldo.melo@gmail.com>
Cc:     Lorenz Bauer <lmb@cloudflare.com>, bpf <bpf@vger.kernel.org>,
        dwarves@vger.kernel.org, kernel-team <kernel-team@cloudflare.com>
Content-Type: text/plain; charset="UTF-8"
Sender: bpf-owner@vger.kernel.org
Precedence: bulk
List-ID: <bpf.vger.kernel.org>
X-Mailing-List: bpf@vger.kernel.org

On Wed, Jun 24, 2020 at 11:57 AM Arnaldo Carvalho de Melo
<arnaldo.melo@gmail.com> wrote:
>
> Em Wed, Jun 24, 2020 at 11:40:21AM -0700, Andrii Nakryiko escreveu:
> > On Wed, Jun 24, 2020 at 10:57 AM Arnaldo Carvalho de Melo
> > <arnaldo.melo@gmail.com> wrote:
> > >
> > > Em Wed, Jun 24, 2020 at 10:41:10AM -0700, Andrii Nakryiko escreveu:
> > > > On Wed, Jun 24, 2020 at 4:07 AM Lorenz Bauer <lmb@cloudflare.com> wrote:
> > > > >
> > > > > Hi,
> > > > >
> > > > > If pahole -J is used on an ELF that has BTF info from clang, it
> > > > > produces an invalid
> > > > > output. This is because pahole rewrites the .BTF section (which
> > > > > includes a new string
> > > > > table) but it doesn't touch .BTF.ext at all.
> > > >
> > > > Why do you run `pahole -J` on BPF .o file? Clang already generates
> > > > .BTF (and .BTF.ext, of course) for you.
> > > >
> > > > pahole -J is supposed to be used for vmlinux, not for clang-compiled
> > > > -target BPF object files.
> > >
> > > yeah, I was thinking this was for a vmlinux generated by clang, which,
> > > from the commands below (the suffix _prog.o) should have told me this is
> > > a target BPF object file.
> > >
> > > But then, if one insists for some reason in generating BTF from the
> > > DWARF in a BPF target object file, stripping .BTF.ext, if present, is
> > > the right thing to do at this point.
> >
> > I disagree. Those who insist probably have some wrong conceptual
> > understanding and it's better to fix that (understanding), rather than
> > lose focus and bend tool to do what it's not supposed to do and
> > ultimately cause more confusion.
>
> So we can instead notice the presence of .BTF.ext when the user calls
> 'pahole -J' on a target BPF object file and bail out, only allowing it
> to convert from DWARF to BTF and thus encode the .BTF elf section when
> .BTF.ext isn't present, as we can't easily figure out if the present of
> just .BTF section was done by clang or pahole on a BTF target object
> file built without -g.

Can't we check ELF's target machine and reject if it's a BPF one?
Someday we might also support "cross-compilation" to be able to dedup
arm ELF from x86 machine. It's sort of ok today for little-endian
ARMs, so maybe not outright reject if architecture is not the same as
the local one?

>
> - Arnaldo
>
> > pahole's BTF conversion is really driven towards kernel use-case
> > (e.g., with global variables, etc). I wouldn't distract ourselves with
> > supporting de-duplicating BPF object files. Single .o's BTF is already
> > deduplicated as produced by Clang. Once we add static linking of
> > multiple BPF .o's (which I hope to start working on very soon), that
> > de-duplication will be handled automatically by libbpf (and hopefully
> > integrated into lld as well), among many other things that need to
> > happen to make static linking work.
> >
> > >
> > > - Arnaldo
> > >
> > > > >
> > > > > To demonstrate, on a recent check out of bpf-next:
> > > > >     $ cp connect4_prog.o connect4_pahole.o
> > > > >     $ pahole -J connect4_pahole.o
> > > > >     $ llvm-objcopy-10 --dump-section .BTF=pahole-btf.bin
> > > > > --dump-section .BTF.ext=pahole-btf-ext.bin connect4_pahole.o
> > > > >     $ llvm-objcopy-10 --dump-section .BTF=btf.bin --dump-section
> > > > > .BTF.ext=btf-ext.bin connect4_prog.o
> > > > >     $ sha1sum *.bin
> > > > >     1b5c7407dd9fd13f969931d32f6b864849e66a68  btf.bin
> > > > >     4c43efcc86d3cd908ddc77c15fc4a35af38d842b  btf-ext.bin
> > > > >     2a60767a3a037de66a8d963110601769fa0f198e  pahole-btf.bin
> > > > >     4c43efcc86d3cd908ddc77c15fc4a35af38d842b  pahole-btf-ext.bin
> > > > >
> > > > > This problem crops up when compiling old kernels like 4.19 which have
> > > > > an extra pahole
> > > > > build step with clang-10.
> > > >
> > > > I was under impression that clang generates .BTF and .BTF.ext only for
> > > > -target BPF. In this case, kernel is compiled for "real" target arch,
> > > > so there shouldn't be .BTF.ext in the first place? If that's not the
> > > > case, then I guess it's a bug in Clang.
> > > >
> > > > >
> > > > > I think a possible fix is to strip .BTF.ext if .BTF is rewritten.
> > > > >
> > > > > Best
> > > > > Lorenz
> > > > >
> > > > > --
> > > > > Lorenz Bauer  |  Systems Engineer
> > > > > 6th Floor, County Hall/The Riverside Building, SE1 7PB, UK
> > > > >
> > > > > www.cloudflare.com
> > >
> > > --
> > >
> > > - Arnaldo
>
> --
>
> - Arnaldo
