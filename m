Return-Path: <bpf-owner@vger.kernel.org>
X-Original-To: lists+bpf@lfdr.de
Delivered-To: lists+bpf@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id AFD841A2795
	for <lists+bpf@lfdr.de>; Wed,  8 Apr 2020 18:57:08 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730444AbgDHQ5I (ORCPT <rfc822;lists+bpf@lfdr.de>);
        Wed, 8 Apr 2020 12:57:08 -0400
Received: from mail-lf1-f41.google.com ([209.85.167.41]:34537 "EHLO
        mail-lf1-f41.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729456AbgDHQ5H (ORCPT <rfc822;bpf@vger.kernel.org>);
        Wed, 8 Apr 2020 12:57:07 -0400
Received: by mail-lf1-f41.google.com with SMTP id x23so5698469lfq.1
        for <bpf@vger.kernel.org>; Wed, 08 Apr 2020 09:57:04 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=mime-version:from:date:message-id:subject:to:cc;
        bh=6SfuBq/TwzheywHeLr32DgZVunqnvsfYNmoDN+B/CKg=;
        b=O7jieSNt8e7E14URhVkVQUbS+O0yKzGgXgBz+CTn2UDmLFDb8yC64ykrcxNYLyMKp4
         DPMSOMdrq3TjJzXYQxM6PTAznOjQNq9vVzNFaOOoUHbWJd9rPUVaiDFvW3PFUER4pzAD
         /G0ZSpcyh9mz27nrQFwFbz9sSoKlAzl7R/Y6y7Xu12QumTcMmb4ZA356oA2V6Qwzwkla
         6Fi3b/H3V69UIeEXgR+hP3KSiwca47T/eYLDXLKHcFHkBBpjYBSHkAm/nJZped3FexFI
         kaHdoEdRNjGTn+JTEOag/4LWm8jtoEkcVUv9bZEXWoJHc6Ff7lz3NcnjqEoQc2ySVvuo
         tZog==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:from:date:message-id:subject:to:cc;
        bh=6SfuBq/TwzheywHeLr32DgZVunqnvsfYNmoDN+B/CKg=;
        b=qY1aHSYRKYAlUAxh2tPS2/oKyy89IaTqlT04kAuF/Ib+Q/8JHmdjbU5M4E2vZzPLeH
         R3rSeOQrATWLng/vIC+2cTsaVDGdk5MMc712Mq+7gzfIbwtI4+aY++FK1o+as2lgMNwD
         YZO09kz0KG5VpvRzPwvDvb5Zzvt8YxinzOAg2zlYC0KI61u/irLqdefqibWUuFVpZOew
         VN6aj9YG3nnTV94YmkQ6ClB7nE3IVWDC8fdYynfemroII2/UVUXLmbUkIevU8/Uq4IyS
         vgGvgF1ngII/4NNfH4z5yUEWZ6BqtzEyIiSdAwKACdusYBfaqyPJiQmOgvNRQ0juSfDk
         7Z7w==
X-Gm-Message-State: AGi0PuaIM3iTR06pUi2RlxuIdJogbnj9R/HQOLT0F/0grY6Q9gZrmdY6
        GC5acVMAKZ2c77UEJU3kMKMM0mjzeu0q7PVYS3Yp/iJq3iY=
X-Google-Smtp-Source: APiQypIN86qYyozC7+cm64jBq/uvmJEDlUbImtOz2bNIZPdyFZABI22qjYYlf/IHPsBE1AS8Nt1IfcBLqglnzlXT1us=
X-Received: by 2002:a19:f719:: with SMTP id z25mr5259874lfe.63.1586365022462;
 Wed, 08 Apr 2020 09:57:02 -0700 (PDT)
MIME-Version: 1.0
From:   Jann Horn <jannh@google.com>
Date:   Wed, 8 Apr 2020 18:56:35 +0200
Message-ID: <CAG48ez2R5nZA91j7cf2Z5o3dOEz0QNZK7cxecjmw0B-ZQ7AjmA@mail.gmail.com>
Subject: BPF map freezing is unreliable; can we instead just inline constants?
To:     bpf <bpf@vger.kernel.org>,
        Alexei Starovoitov <alexei.starovoitov@gmail.com>,
        Daniel Borkmann <daniel@iogearbox.net>
Cc:     Matthew Garrett <mjg59@google.com>
Content-Type: multipart/mixed; boundary="000000000000a6d99e05a2ca6300"
Sender: bpf-owner@vger.kernel.org
Precedence: bulk
List-ID: <bpf.vger.kernel.org>
X-Mailing-List: bpf@vger.kernel.org

--000000000000a6d99e05a2ca6300
Content-Type: text/plain; charset="UTF-8"

Hi!

I saw that BPF allows root to create frozen maps, for which the
verifier then assumes that they contain constant values. However, map
freezing is pretty wobbly:

1. The syscalls for updating maps from userspace don't seem to lock
the map at all.
2. BPF doesn't account for the fact that mprotect() can be used to
arbitrarily flip VM_WRITE on and off as long as VM_MAYWRITE is set.
(crasher attached as bpf-constant-data-mprotect.c)
3. It is assumed that a memory mapping can't be used to write to a
page anymore after the mapping has been removed; but actually,
userspace can grab references to pages in a VMA and use those
references to write to the VMA's pages after the VMA has already been
closed. (crasher attached as bpf-constant-data-uffd.c, compile with
"gcc -pthread ...")

These things are probably not _huge_ concerns for most usecases, since
you need to be root to hit this stuff anyway - but I think it'd be
desirable for BPF to actually be memory-safe (and the kernel lockdown
folks would probably appreciate not having such a glaring hole that
lets root read/write arbitrary memory).

The third point is particularly hard to solve without adding more
constraints on the userspace API; I think that tightening up map
freezing would require ensuring that the map has *never* been mapped
as writable.

Is there a reason why the verifier doesn't replace loads from frozen
maps with the values stored in those maps? That seems like it would be
not only easier to secure, but additionally more performant.

--000000000000a6d99e05a2ca6300
Content-Type: text/x-csrc; charset="US-ASCII"; name="bpf-constant-data-uffd.c"
Content-Disposition: attachment; filename="bpf-constant-data-uffd.c"
Content-Transfer-Encoding: base64
Content-ID: <f_k8rkaz150>
X-Attachment-Id: f_k8rkaz150

I2RlZmluZSBfR05VX1NPVVJDRQojaW5jbHVkZSA8cHRocmVhZC5oPgojaW5jbHVkZSA8ZXJyLmg+
CiNpbmNsdWRlIDxlcnJuby5oPgojaW5jbHVkZSA8c2NoZWQuaD4KI2luY2x1ZGUgPHN0ZGlvLmg+
CiNpbmNsdWRlIDx1bmlzdGQuaD4KI2luY2x1ZGUgPGxpbnV4L2JwZi5oPgojaW5jbHVkZSA8bGlu
dXgvZmlsdGVyLmg+CiNpbmNsdWRlIDxsaW51eC9wcmN0bC5oPgojaW5jbHVkZSA8bGludXgvdXNl
cmZhdWx0ZmQuaD4KI2luY2x1ZGUgPHN5cy9pb2N0bC5oPgojaW5jbHVkZSA8c3lzL3N5c2NhbGwu
aD4KI2luY2x1ZGUgPHN5cy9tbWFuLmg+CiNpbmNsdWRlIDxzdGRpbnQuaD4KI2luY2x1ZGUgPHN5
cy9zb2NrZXQuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cG9sbC5oPgojaW5jbHVk
ZSA8c3lzL3Vpby5oPgojaW5jbHVkZSA8ZmNudGwuaD4KCiNkZWZpbmUgR1BMdjIgIkdQTCB2MiIK
I2RlZmluZSBBUlJTSVpFKHgpIChzaXplb2YoeCkgLyBzaXplb2YoKHgpWzBdKSkKCgovKiByZWdp
c3RlcnMgKi8KLyogY2FsbGVyLXNhdmVkOiByMC4ucjUgKi8KI2RlZmluZSBCUEZfUkVHX0FSRzEg
ICAgQlBGX1JFR18xCiNkZWZpbmUgQlBGX1JFR19BUkcyICAgIEJQRl9SRUdfMgojZGVmaW5lIEJQ
Rl9SRUdfQVJHMyAgICBCUEZfUkVHXzMKI2RlZmluZSBCUEZfUkVHX0FSRzQgICAgQlBGX1JFR180
CiNkZWZpbmUgQlBGX1JFR19BUkc1ICAgIEJQRl9SRUdfNQojZGVmaW5lIEJQRl9SRUdfQ1RYICAg
ICBCUEZfUkVHXzYKI2RlZmluZSBCUEZfUkVHX0ZQICAgICAgQlBGX1JFR18xMAoKI2RlZmluZSBC
UEZfTERfSU1NNjRfUkFXKERTVCwgU1JDLCBJTU0pICAgICAgICAgXAogICgoc3RydWN0IGJwZl9p
bnNuKSB7ICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAuY29kZSAgPSBCUEZfTEQgfCBC
UEZfRFcgfCBCUEZfSU1NLCAgICAgICAgIFwKICAgIC5kc3RfcmVnID0gRFNULCAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgXAogICAgLnNyY19yZWcgPSBTUkMsICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICBcCiAgICAub2ZmICAgPSAwLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIFwKICAgIC5pbW0gICA9IChfX3UzMikgKElNTSkgfSksICAgICAgICAgICAgICAgICAgXAog
ICgoc3RydWN0IGJwZl9pbnNuKSB7ICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAuY29k
ZSAgPSAwLCAvKiB6ZXJvIGlzIHJlc2VydmVkIG9wY29kZSAqLyAgIFwKICAgIC5kc3RfcmVnID0g
MCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLnNyY19yZWcgPSAwLCAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAub2ZmICAgPSAwLCAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIFwKICAgIC5pbW0gICA9ICgoX191NjQpIChJTU0pKSA+PiAzMiB9
KQojZGVmaW5lIEJQRl9MRF9NQVBfRkQoRFNULCBNQVBfRkQpICAgICAgICAgICAgICBcCiAgQlBG
X0xEX0lNTTY0X1JBVyhEU1QsIEJQRl9QU0VVRE9fTUFQX0ZELCBNQVBfRkQpCiNkZWZpbmUgQlBG
X0xEWF9NRU0oU0laRSwgRFNULCBTUkMsIE9GRikgICAgICAgIFwKICAoKHN0cnVjdCBicGZfaW5z
bikgeyAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLmNvZGUgID0gQlBGX0xEWCB8IEJQ
Rl9TSVpFKFNJWkUpIHwgQlBGX01FTSxcCiAgICAuZHN0X3JlZyA9IERTVCwgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIFwKICAgIC5zcmNfcmVnID0gU1JDLCAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgXAogICAgLm9mZiAgID0gT0ZGLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICBcCiAgICAuaW1tICAgPSAwIH0pCiNkZWZpbmUgQlBGX01PVjY0X1JFRyhEU1QsIFNSQykgICAg
ICAgICAgICAgICAgIFwKICAoKHN0cnVjdCBicGZfaW5zbikgeyAgICAgICAgICAgICAgICAgICAg
ICAgICAgXAogICAgLmNvZGUgID0gQlBGX0FMVTY0IHwgQlBGX01PViB8IEJQRl9YLCAgICAgICBc
CiAgICAuZHN0X3JlZyA9IERTVCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAgIC5z
cmNfcmVnID0gU1JDLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLm9mZiAgID0g
MCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAuaW1tICAgPSAwIH0pCiNk
ZWZpbmUgQlBGX0FMVTY0X0lNTShPUCwgRFNULCBJTU0pICAgICAgICAgICAgIFwKICAoKHN0cnVj
dCBicGZfaW5zbikgeyAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLmNvZGUgID0gQlBG
X0FMVTY0IHwgQlBGX09QKE9QKSB8IEJQRl9LLCAgICBcCiAgICAuZHN0X3JlZyA9IERTVCwgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAgIC5zcmNfcmVnID0gMCwgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgXAogICAgLm9mZiAgID0gMCwgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICBcCiAgICAuaW1tICAgPSBJTU0gfSkKI2RlZmluZSBCUEZfQUxVMzJfSU1NKE9Q
LCBEU1QsIElNTSkgICAgICAgICAgICAgXAogICgoc3RydWN0IGJwZl9pbnNuKSB7ICAgICAgICAg
ICAgICAgICAgICAgICAgICBcCiAgICAuY29kZSAgPSBCUEZfQUxVIHwgQlBGX09QKE9QKSB8IEJQ
Rl9LLCAgICAgIFwKICAgIC5kc3RfcmVnID0gRFNULCAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgXAogICAgLnNyY19yZWcgPSAwLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAg
ICAub2ZmICAgPSAwLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAgIC5pbW0g
ICA9IElNTSB9KQojZGVmaW5lIEJQRl9TVFhfTUVNKFNJWkUsIERTVCwgU1JDLCBPRkYpICAgICAg
ICBcCiAgKChzdHJ1Y3QgYnBmX2luc24pIHsgICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAg
IC5jb2RlICA9IEJQRl9TVFggfCBCUEZfU0laRShTSVpFKSB8IEJQRl9NRU0sXAogICAgLmRzdF9y
ZWcgPSBEU1QsICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAuc3JjX3JlZyA9IFNS
QywgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAgIC5vZmYgICA9IE9GRiwgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLmltbSAgID0gMCB9KQojZGVmaW5lIEJQRl9T
VF9NRU0oU0laRSwgRFNULCBPRkYsIElNTSkgICAgICAgICBcCiAgKChzdHJ1Y3QgYnBmX2luc24p
IHsgICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAgIC5jb2RlICA9IEJQRl9TVCB8IEJQRl9T
SVpFKFNJWkUpIHwgQlBGX01FTSwgXAogICAgLmRzdF9yZWcgPSBEU1QsICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBcCiAgICAuc3JjX3JlZyA9IDAsICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIFwKICAgIC5vZmYgICA9IE9GRiwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
XAogICAgLmltbSAgID0gSU1NIH0pCiNkZWZpbmUgQlBGX0VNSVRfQ0FMTChGVU5DKSAgICAgICAg
ICAgICAgICAgICAgIFwKICAoKHN0cnVjdCBicGZfaW5zbikgeyAgICAgICAgICAgICAgICAgICAg
ICAgICAgXAogICAgLmNvZGUgID0gQlBGX0pNUCB8IEJQRl9DQUxMLCAgICAgICAgICAgICAgICBc
CiAgICAuZHN0X3JlZyA9IDAsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAgIC5z
cmNfcmVnID0gMCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLm9mZiAgID0g
MCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAuaW1tICAgPSAoRlVOQykg
fSkKI2RlZmluZSBCUEZfSk1QX0lNTShPUCwgRFNULCBJTU0sIE9GRikgICAgICAgICAgXAogICgo
c3RydWN0IGJwZl9pbnNuKSB7ICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAuY29kZSAg
PSBCUEZfSk1QIHwgQlBGX09QKE9QKSB8IEJQRl9LLCAgICAgIFwKICAgIC5kc3RfcmVnID0gRFNU
LCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLnNyY19yZWcgPSAwLCAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAub2ZmICAgPSBPRkYsICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIFwKICAgIC5pbW0gICA9IElNTSB9KQojZGVmaW5lIEJQRl9FWElUX0lO
U04oKSAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgKChzdHJ1Y3QgYnBmX2luc24pIHsgICAg
ICAgICAgICAgICAgICAgICAgICAgIFwKICAgIC5jb2RlICA9IEJQRl9KTVAgfCBCUEZfRVhJVCwg
ICAgICAgICAgICAgICAgXAogICAgLmRzdF9yZWcgPSAwLCAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICBcCiAgICAuc3JjX3JlZyA9IDAsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IFwKICAgIC5vZmYgICA9IDAsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAg
LmltbSAgID0gMCB9KQojZGVmaW5lIEJQRl9MRF9BQlMoU0laRSwgSU1NKSAgICAgICAgICAgICAg
ICAgICBcCiAgKChzdHJ1Y3QgYnBmX2luc24pIHsgICAgICAgICAgICAgICAgICAgICAgICAgIFwK
ICAgIC5jb2RlICA9IEJQRl9MRCB8IEJQRl9TSVpFKFNJWkUpIHwgQlBGX0FCUywgXAogICAgLmRz
dF9yZWcgPSAwLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAuc3JjX3JlZyA9
IDAsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAgIC5vZmYgICA9IDAsICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLmltbSAgID0gSU1NIH0pCiNkZWZpbmUg
QlBGX0FMVTY0X1JFRyhPUCwgRFNULCBTUkMpICAgICAgICAgICAgIFwKICAoKHN0cnVjdCBicGZf
aW5zbikgeyAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLmNvZGUgID0gQlBGX0FMVTY0
IHwgQlBGX09QKE9QKSB8IEJQRl9YLCAgICBcCiAgICAuZHN0X3JlZyA9IERTVCwgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIFwKICAgIC5zcmNfcmVnID0gU1JDLCAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgXAogICAgLm9mZiAgID0gMCwgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICBcCiAgICAuaW1tICAgPSAwIH0pCiNkZWZpbmUgQlBGX01PVjY0X0lNTShEU1QsIElNTSkg
ICAgICAgICAgICAgICAgIFwKICAoKHN0cnVjdCBicGZfaW5zbikgeyAgICAgICAgICAgICAgICAg
ICAgICAgICAgXAogICAgLmNvZGUgID0gQlBGX0FMVTY0IHwgQlBGX01PViB8IEJQRl9LLCAgICAg
ICBcCiAgICAuZHN0X3JlZyA9IERTVCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAg
IC5zcmNfcmVnID0gMCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLm9mZiAg
ID0gMCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAuaW1tICAgPSBJTU0g
fSkKCmludCBicGZfKGludCBjbWQsIHVuaW9uIGJwZl9hdHRyICphdHRycykgewogIHJldHVybiBz
eXNjYWxsKF9fTlJfYnBmLCBjbWQsIGF0dHJzLCBzaXplb2YoKmF0dHJzKSk7Cn0KCmludCBhcnJh
eV9jcmVhdGUoaW50IHZhbHVlX3NpemUsIGludCBudW1fZW50cmllcywgdW5zaWduZWQgaW50IGZs
YWdzKSB7CiAgdW5pb24gYnBmX2F0dHIgY3JlYXRlX21hcF9hdHRycyA9IHsKICAgICAgLm1hcF90
eXBlID0gQlBGX01BUF9UWVBFX0FSUkFZLAogICAgICAua2V5X3NpemUgPSA0LAogICAgICAudmFs
dWVfc2l6ZSA9IHZhbHVlX3NpemUsCiAgICAgIC5tYXhfZW50cmllcyA9IG51bV9lbnRyaWVzLAog
ICAgICAubWFwX2ZsYWdzID0gZmxhZ3MsCiAgfTsKICBpbnQgbWFwZmQgPSBicGZfKEJQRl9NQVBf
Q1JFQVRFLCAmY3JlYXRlX21hcF9hdHRycyk7CiAgaWYgKG1hcGZkID09IC0xKQogICAgZXJyKDEs
ICJtYXAgY3JlYXRlIik7CiAgcmV0dXJuIG1hcGZkOwp9Cgp2b2lkIG1hcF9mcmVlemUoaW50IGZk
KSB7CiAgdW5pb24gYnBmX2F0dHIgYXR0ciA9IHsubWFwX2ZkID0gZmR9OwogIGlmIChicGZfKEJQ
Rl9NQVBfRlJFRVpFLCAmYXR0cikpCiAgICBlcnIoMSwgImZyZWV6ZSBtYXAiKTsKfQoKaW50IHBy
b2dfbG9hZChzdHJ1Y3QgYnBmX2luc24gKmluc25zLCBzaXplX3QgaW5zbnNfY291bnQpIHsKICBj
aGFyIHZlcmlmaWVyX2xvZ1sxMDAwMDBdOwogIHVuaW9uIGJwZl9hdHRyIGNyZWF0ZV9wcm9nX2F0
dHJzID0gewogICAgLnByb2dfdHlwZSA9IEJQRl9QUk9HX1RZUEVfU09DS0VUX0ZJTFRFUiwKICAg
IC5pbnNuX2NudCA9IGluc25zX2NvdW50LAogICAgLmluc25zID0gKHVpbnQ2NF90KWluc25zLAog
ICAgLmxpY2Vuc2UgPSAodWludDY0X3QpR1BMdjIsCiAgICAubG9nX2xldmVsID0gMiwKICAgIC5s
b2dfc2l6ZSA9IHNpemVvZih2ZXJpZmllcl9sb2cpLAogICAgLmxvZ19idWYgPSAodWludDY0X3Qp
dmVyaWZpZXJfbG9nCiAgfTsKICBpbnQgcHJvZ2ZkID0gYnBmXyhCUEZfUFJPR19MT0FELCAmY3Jl
YXRlX3Byb2dfYXR0cnMpOwogIGludCBlcnJub18gPSBlcnJubzsKICBwcmludGYoIj09PT09PT09
PT09PT09PT09PT09PT09PT09XG4lcz09PT09PT09PT09PT09PT09PT09PT09PT09XG4iLCB2ZXJp
Zmllcl9sb2cpOwogIGVycm5vID0gZXJybm9fOwogIGlmIChwcm9nZmQgPT0gLTEpCiAgICBlcnIo
MSwgInByb2cgbG9hZCIpOwogIHJldHVybiBwcm9nZmQ7Cn0KCmludCBjcmVhdGVfZmlsdGVyZWRf
c29ja2V0X2ZkKHN0cnVjdCBicGZfaW5zbiAqaW5zbnMsIHNpemVfdCBpbnNuc19jb3VudCkgewog
IGludCBwcm9nZmQgPSBwcm9nX2xvYWQoaW5zbnMsIGluc25zX2NvdW50KTsKCiAgLy8gaG9vayBl
QlBGIHByb2dyYW0gdXAgdG8gYSBzb2NrZXQKICAvLyBzZW5kbXNnKCkgdG8gdGhlIHNvY2tldCB3
aWxsIHRyaWdnZXIgdGhlIGZpbHRlcgogIC8vIHJldHVybmluZyAwIGluIHRoZSBmaWx0ZXIgc2hv
dWxkIHRvc3MgdGhlIHBhY2tldAogIGludCBzb2Nrc1syXTsKICBpZiAoc29ja2V0cGFpcihBRl9V
TklYLCBTT0NLX0RHUkFNLCAwLCBzb2NrcykpCiAgICBlcnIoMSwgInNvY2tldHBhaXIiKTsKICBp
ZiAoc2V0c29ja29wdChzb2Nrc1swXSwgU09MX1NPQ0tFVCwgU09fQVRUQUNIX0JQRiwgJnByb2dm
ZCwgc2l6ZW9mKGludCkpKQogICAgZXJyKDEsICJzZXRzb2Nrb3B0Iik7CiAgcmV0dXJuIHNvY2tz
WzFdOwp9Cgp2b2lkIHRyaWdnZXJfcHJvYyhpbnQgc29ja2ZkKSB7CiAgaWYgKHdyaXRlKHNvY2tm
ZCwgIlgiLCAxKSAhPSAxKQogICAgZXJyKDEsICJ3cml0ZSB0byBwcm9jIHNvY2tldCBmYWlsZWQi
KTsKfQoKc3RhdGljIHVuc2lnbmVkIGxvbmcgKnVmZmRfbWFwcGluZzsKc3RhdGljIHVuc2lnbmVk
IGxvbmcgKm1hcHBpbmc7CgpzdGF0aWMgdm9pZCAqdGhyZWFkX2ZuKHZvaWQgKmR1bW15KSB7CiAg
c3RydWN0IGlvdmVjIGxvY2FsX2lvdiA9IHsgLmlvdl9iYXNlID0gdWZmZF9tYXBwaW5nLCAuaW92
X2xlbiA9IDggfTsKICBzdHJ1Y3QgaW92ZWMgcmVtb3RlX2lvdiA9IHsgLmlvdl9iYXNlID0gbWFw
cGluZywgLmlvdl9sZW4gPSA4IH07CiAgaWYgKHByb2Nlc3Nfdm1fd3JpdGV2KGdldHBpZCgpLCAm
bG9jYWxfaW92LCAxLCAmcmVtb3RlX2lvdiwgMSwgMCkgIT0gOCkKICAgIGVycigxLCAicHJvY2Vz
c192bV93cml0ZXYiKTsKICByZXR1cm4gTlVMTDsKfQoKaW50IG1haW4odm9pZCkgewogIGludCBz
bWFsbF9tYXAgPSBhcnJheV9jcmVhdGUoOCwgMSwgQlBGX0ZfUkRPTkxZX1BST0d8QlBGX0ZfTU1B
UEFCTEUpOwoKICAvKiBtYXAgdGhlIHNtYWxsX21hcCAqLwogIG1hcHBpbmcgPSBtbWFwKE5VTEws
IDB4MTAwMCwgUFJPVF9SRUFEfFBST1RfV1JJVEUsIE1BUF9TSEFSRUQsIHNtYWxsX21hcCwgMCk7
CgogIC8qIHNldCB1cCBhIHVzZXJmYXVsdGZkIHJlZ2lvbiBhcyB1ZmZkX21hcHBpbmcgKi8KICBp
bnQgdWZmZCA9IHN5c2NhbGwoX19OUl91c2VyZmF1bHRmZCwgMCk7CiAgaWYgKHVmZmQgPT0gLTEp
CiAgICBlcnIoMSwgInVzZXJmYXVsdGZkIik7CiAgc3RydWN0IHVmZmRpb19hcGkgYXBpID0geyAu
YXBpID0gMHhBQSB9OwogIGlmIChpb2N0bCh1ZmZkLCBVRkZESU9fQVBJLCAmYXBpKSkKICAgIGVy
cigxLCAidWZmZCBhcGkiKTsKICB1ZmZkX21hcHBpbmcgPSBtbWFwKE5VTEwsIDB4MTAwMCwgUFJP
VF9SRUFEfFBST1RfV1JJVEUsIE1BUF9QUklWQVRFfE1BUF9BTk9OWU1PVVMsIC0xLCAwKTsKICBp
ZiAodWZmZF9tYXBwaW5nID09IE1BUF9GQUlMRUQpCiAgICBlcnIoMSwgIm1tYXAgYW5vbiIpOwog
IHN0cnVjdCB1ZmZkaW9fcmVnaXN0ZXIgcmVnID0gewogICAgLnJhbmdlID0geyAuc3RhcnQgPSAo
dW5zaWduZWQgbG9uZyl1ZmZkX21hcHBpbmcsIC5sZW4gPSAweDEwMDAgfSwKICAgIC5tb2RlID0g
VUZGRElPX1JFR0lTVEVSX01PREVfTUlTU0lORwogIH07CiAgaWYgKGlvY3RsKHVmZmQsIFVGRkRJ
T19SRUdJU1RFUiwgJnJlZykpCiAgICBlcnIoMSwgInVmZmQgcmVnaXN0ZXIiKTsKCiAgLyogc3Rh
cnQgYSB0aHJlYWQgdGhhdCB3aWxsIHRha2UgYSByZWZlcmVuY2UgdG8gdGhlIEJQRiBtYXAncyBw
YWdlLAogICAqIHRoZW4gc3RhbGwgb24gdGhlIHVzZXJmYXVsdGZkICovCiAgcHRocmVhZF90IHRo
cmVhZDsKICBpZiAocHRocmVhZF9jcmVhdGUoJnRocmVhZCwgTlVMTCwgdGhyZWFkX2ZuLCBOVUxM
KSkKICAgIGVycigxLCAicHRocmVhZF9jcmVhdGUiKTsKICBzbGVlcCgxKTsKCiAgLyogdW5tYXAg
dGhlIHNtYWxsX21hcDsgdGhlIG90aGVyIHRocmVhZCB3aWxsIHN0aWxsIGJlIGhvbGRpbmcgYSBy
ZWZlcmVuY2UgdG8gdGhlIHBhZ2UgaW4gaXQgKi8KICBtdW5tYXAobWFwcGluZywgMHgxMDAwKTsK
CiAgLyogZnJlZXplIHRoZSBtYXAgKi8KICBtYXBfZnJlZXplKHNtYWxsX21hcCk7CgogIC8qIGxv
YWQgYSBwcm9ncmFtIHdoaWxlIHRoZSBtYXAgc3RpbGwgY29udGFpbnMgemVyb2VzICovCiAgc3Ry
dWN0IGJwZl9pbnNuIGluc25zW10gPSB7CiAgICAvLyByMCA9ICZtYXBbMF0KICAgIEJQRl9MRF9N
QVBfRkQoQlBGX1JFR19BUkcxLCBzbWFsbF9tYXApLAogICAgQlBGX01PVjY0X1JFRyhCUEZfUkVH
X0FSRzIsIEJQRl9SRUdfRlApLAogICAgQlBGX0FMVTY0X0lNTShCUEZfQURELCBCUEZfUkVHX0FS
RzIsIC00KSwKICAgIEJQRl9TVF9NRU0oQlBGX1csIEJQRl9SRUdfQVJHMiwgMCwgMCksCiAgICBC
UEZfRU1JVF9DQUxMKEJQRl9GVU5DX21hcF9sb29rdXBfZWxlbSksCiAgICBCUEZfSk1QX0lNTShC
UEZfSk5FLCBCUEZfUkVHXzAsIDAsIDEpLAogICAgQlBGX0VYSVRfSU5TTigpLAoKICAgIC8vIHIx
ID0gbWFwWzBdCiAgICBCUEZfTERYX01FTShCUEZfRFcsIEJQRl9SRUdfMSwgQlBGX1JFR18wLCAw
KSwKCiAgICAvLyByMiA9ICooJm1hcFswXSArIG1hcFswXSkKICAgIEJQRl9BTFU2NF9SRUcoQlBG
X0FERCwgQlBGX1JFR18wLCBCUEZfUkVHXzEpLAogICAgQlBGX0xEWF9NRU0oQlBGX0RXLCBCUEZf
UkVHXzIsIEJQRl9SRUdfMCwgMCksCgogICAgQlBGX01PVjY0X0lNTShCUEZfUkVHXzAsIDApLAog
ICAgQlBGX0VYSVRfSU5TTigpCiAgfTsKICBpbnQgc29ja19mZCA9IGNyZWF0ZV9maWx0ZXJlZF9z
b2NrZXRfZmQoaW5zbnMsIEFSUlNJWkUoaW5zbnMpKTsKCiAgLyogdW5ibG9jayB0aGUgb3RoZXIg
dGhyZWFkLCB3aGljaCB3aWxsIHRoZW4gb3ZlcndyaXRlIHRoZSBtYXAgY29udGVudHMgKi8KICB1
bnNpZ25lZCBsb25nIGJ1ZlsweDEwMDAvOF0gPSB7IDB4ZGVhZTAwMDAwMDAwMDAwMCB9OwogIHN0
cnVjdCB1ZmZkaW9fY29weSBjb3B5ID0gewogICAgLmRzdCA9ICh1bnNpZ25lZCBsb25nKXVmZmRf
bWFwcGluZywKICAgIC5zcmMgPSAodW5zaWduZWQgbG9uZylidWYsCiAgICAubGVuID0gMHgxMDAw
CiAgfTsKICBpZiAoaW9jdGwodWZmZCwgVUZGRElPX0NPUFksICZjb3B5KSkKICAgIGVycigxLCAi
dWZmZCBjb3B5Iik7CiAgaWYgKHB0aHJlYWRfam9pbih0aHJlYWQsIE5VTEwpKQogICAgZXJyKDEs
ICJwdGhyZWFkX2pvaW4iKTsKCiAgLyogcnVuIHRoZSBwcm9ncmFtIHdpdGggYm9ndXMgZGF0YSAq
LwogIHRyaWdnZXJfcHJvYyhzb2NrX2ZkKTsKfQo=
--000000000000a6d99e05a2ca6300
Content-Type: text/x-csrc; charset="US-ASCII"; name="bpf-constant-data-mprotect.c"
Content-Disposition: attachment; filename="bpf-constant-data-mprotect.c"
Content-Transfer-Encoding: base64
Content-ID: <f_k8rkaz2l1>
X-Attachment-Id: f_k8rkaz2l1

I2RlZmluZSBfR05VX1NPVVJDRQojaW5jbHVkZSA8cHRocmVhZC5oPgojaW5jbHVkZSA8ZXJyLmg+
CiNpbmNsdWRlIDxlcnJuby5oPgojaW5jbHVkZSA8c2NoZWQuaD4KI2luY2x1ZGUgPHN0ZGlvLmg+
CiNpbmNsdWRlIDx1bmlzdGQuaD4KI2luY2x1ZGUgPGxpbnV4L2JwZi5oPgojaW5jbHVkZSA8bGlu
dXgvZmlsdGVyLmg+CiNpbmNsdWRlIDxsaW51eC9wcmN0bC5oPgojaW5jbHVkZSA8bGludXgvdXNl
cmZhdWx0ZmQuaD4KI2luY2x1ZGUgPHN5cy9pb2N0bC5oPgojaW5jbHVkZSA8c3lzL3N5c2NhbGwu
aD4KI2luY2x1ZGUgPHN5cy9tbWFuLmg+CiNpbmNsdWRlIDxzdGRpbnQuaD4KI2luY2x1ZGUgPHN5
cy9zb2NrZXQuaD4KI2luY2x1ZGUgPHN0cmluZy5oPgojaW5jbHVkZSA8cG9sbC5oPgojaW5jbHVk
ZSA8c3lzL3Vpby5oPgojaW5jbHVkZSA8ZmNudGwuaD4KCiNkZWZpbmUgR1BMdjIgIkdQTCB2MiIK
I2RlZmluZSBBUlJTSVpFKHgpIChzaXplb2YoeCkgLyBzaXplb2YoKHgpWzBdKSkKCgovKiByZWdp
c3RlcnMgKi8KLyogY2FsbGVyLXNhdmVkOiByMC4ucjUgKi8KI2RlZmluZSBCUEZfUkVHX0FSRzEg
ICAgQlBGX1JFR18xCiNkZWZpbmUgQlBGX1JFR19BUkcyICAgIEJQRl9SRUdfMgojZGVmaW5lIEJQ
Rl9SRUdfQVJHMyAgICBCUEZfUkVHXzMKI2RlZmluZSBCUEZfUkVHX0FSRzQgICAgQlBGX1JFR180
CiNkZWZpbmUgQlBGX1JFR19BUkc1ICAgIEJQRl9SRUdfNQojZGVmaW5lIEJQRl9SRUdfQ1RYICAg
ICBCUEZfUkVHXzYKI2RlZmluZSBCUEZfUkVHX0ZQICAgICAgQlBGX1JFR18xMAoKI2RlZmluZSBC
UEZfTERfSU1NNjRfUkFXKERTVCwgU1JDLCBJTU0pICAgICAgICAgXAogICgoc3RydWN0IGJwZl9p
bnNuKSB7ICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAuY29kZSAgPSBCUEZfTEQgfCBC
UEZfRFcgfCBCUEZfSU1NLCAgICAgICAgIFwKICAgIC5kc3RfcmVnID0gRFNULCAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgXAogICAgLnNyY19yZWcgPSBTUkMsICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICBcCiAgICAub2ZmICAgPSAwLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIFwKICAgIC5pbW0gICA9IChfX3UzMikgKElNTSkgfSksICAgICAgICAgICAgICAgICAgXAog
ICgoc3RydWN0IGJwZl9pbnNuKSB7ICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAuY29k
ZSAgPSAwLCAvKiB6ZXJvIGlzIHJlc2VydmVkIG9wY29kZSAqLyAgIFwKICAgIC5kc3RfcmVnID0g
MCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLnNyY19yZWcgPSAwLCAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAub2ZmICAgPSAwLCAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIFwKICAgIC5pbW0gICA9ICgoX191NjQpIChJTU0pKSA+PiAzMiB9
KQojZGVmaW5lIEJQRl9MRF9NQVBfRkQoRFNULCBNQVBfRkQpICAgICAgICAgICAgICBcCiAgQlBG
X0xEX0lNTTY0X1JBVyhEU1QsIEJQRl9QU0VVRE9fTUFQX0ZELCBNQVBfRkQpCiNkZWZpbmUgQlBG
X0xEWF9NRU0oU0laRSwgRFNULCBTUkMsIE9GRikgICAgICAgIFwKICAoKHN0cnVjdCBicGZfaW5z
bikgeyAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLmNvZGUgID0gQlBGX0xEWCB8IEJQ
Rl9TSVpFKFNJWkUpIHwgQlBGX01FTSxcCiAgICAuZHN0X3JlZyA9IERTVCwgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIFwKICAgIC5zcmNfcmVnID0gU1JDLCAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgXAogICAgLm9mZiAgID0gT0ZGLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICBcCiAgICAuaW1tICAgPSAwIH0pCiNkZWZpbmUgQlBGX01PVjY0X1JFRyhEU1QsIFNSQykgICAg
ICAgICAgICAgICAgIFwKICAoKHN0cnVjdCBicGZfaW5zbikgeyAgICAgICAgICAgICAgICAgICAg
ICAgICAgXAogICAgLmNvZGUgID0gQlBGX0FMVTY0IHwgQlBGX01PViB8IEJQRl9YLCAgICAgICBc
CiAgICAuZHN0X3JlZyA9IERTVCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAgIC5z
cmNfcmVnID0gU1JDLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLm9mZiAgID0g
MCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAuaW1tICAgPSAwIH0pCiNk
ZWZpbmUgQlBGX0FMVTY0X0lNTShPUCwgRFNULCBJTU0pICAgICAgICAgICAgIFwKICAoKHN0cnVj
dCBicGZfaW5zbikgeyAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLmNvZGUgID0gQlBG
X0FMVTY0IHwgQlBGX09QKE9QKSB8IEJQRl9LLCAgICBcCiAgICAuZHN0X3JlZyA9IERTVCwgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAgIC5zcmNfcmVnID0gMCwgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgXAogICAgLm9mZiAgID0gMCwgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICBcCiAgICAuaW1tICAgPSBJTU0gfSkKI2RlZmluZSBCUEZfQUxVMzJfSU1NKE9Q
LCBEU1QsIElNTSkgICAgICAgICAgICAgXAogICgoc3RydWN0IGJwZl9pbnNuKSB7ICAgICAgICAg
ICAgICAgICAgICAgICAgICBcCiAgICAuY29kZSAgPSBCUEZfQUxVIHwgQlBGX09QKE9QKSB8IEJQ
Rl9LLCAgICAgIFwKICAgIC5kc3RfcmVnID0gRFNULCAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgXAogICAgLnNyY19yZWcgPSAwLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAg
ICAub2ZmICAgPSAwLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAgIC5pbW0g
ICA9IElNTSB9KQojZGVmaW5lIEJQRl9TVFhfTUVNKFNJWkUsIERTVCwgU1JDLCBPRkYpICAgICAg
ICBcCiAgKChzdHJ1Y3QgYnBmX2luc24pIHsgICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAg
IC5jb2RlICA9IEJQRl9TVFggfCBCUEZfU0laRShTSVpFKSB8IEJQRl9NRU0sXAogICAgLmRzdF9y
ZWcgPSBEU1QsICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAuc3JjX3JlZyA9IFNS
QywgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAgIC5vZmYgICA9IE9GRiwgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLmltbSAgID0gMCB9KQojZGVmaW5lIEJQRl9T
VF9NRU0oU0laRSwgRFNULCBPRkYsIElNTSkgICAgICAgICBcCiAgKChzdHJ1Y3QgYnBmX2luc24p
IHsgICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAgIC5jb2RlICA9IEJQRl9TVCB8IEJQRl9T
SVpFKFNJWkUpIHwgQlBGX01FTSwgXAogICAgLmRzdF9yZWcgPSBEU1QsICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBcCiAgICAuc3JjX3JlZyA9IDAsICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIFwKICAgIC5vZmYgICA9IE9GRiwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
XAogICAgLmltbSAgID0gSU1NIH0pCiNkZWZpbmUgQlBGX0VNSVRfQ0FMTChGVU5DKSAgICAgICAg
ICAgICAgICAgICAgIFwKICAoKHN0cnVjdCBicGZfaW5zbikgeyAgICAgICAgICAgICAgICAgICAg
ICAgICAgXAogICAgLmNvZGUgID0gQlBGX0pNUCB8IEJQRl9DQUxMLCAgICAgICAgICAgICAgICBc
CiAgICAuZHN0X3JlZyA9IDAsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAgIC5z
cmNfcmVnID0gMCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLm9mZiAgID0g
MCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAuaW1tICAgPSAoRlVOQykg
fSkKI2RlZmluZSBCUEZfSk1QX0lNTShPUCwgRFNULCBJTU0sIE9GRikgICAgICAgICAgXAogICgo
c3RydWN0IGJwZl9pbnNuKSB7ICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAuY29kZSAg
PSBCUEZfSk1QIHwgQlBGX09QKE9QKSB8IEJQRl9LLCAgICAgIFwKICAgIC5kc3RfcmVnID0gRFNU
LCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLnNyY19yZWcgPSAwLCAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAub2ZmICAgPSBPRkYsICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIFwKICAgIC5pbW0gICA9IElNTSB9KQojZGVmaW5lIEJQRl9FWElUX0lO
U04oKSAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgKChzdHJ1Y3QgYnBmX2luc24pIHsgICAg
ICAgICAgICAgICAgICAgICAgICAgIFwKICAgIC5jb2RlICA9IEJQRl9KTVAgfCBCUEZfRVhJVCwg
ICAgICAgICAgICAgICAgXAogICAgLmRzdF9yZWcgPSAwLCAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICBcCiAgICAuc3JjX3JlZyA9IDAsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IFwKICAgIC5vZmYgICA9IDAsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAg
LmltbSAgID0gMCB9KQojZGVmaW5lIEJQRl9MRF9BQlMoU0laRSwgSU1NKSAgICAgICAgICAgICAg
ICAgICBcCiAgKChzdHJ1Y3QgYnBmX2luc24pIHsgICAgICAgICAgICAgICAgICAgICAgICAgIFwK
ICAgIC5jb2RlICA9IEJQRl9MRCB8IEJQRl9TSVpFKFNJWkUpIHwgQlBGX0FCUywgXAogICAgLmRz
dF9yZWcgPSAwLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAuc3JjX3JlZyA9
IDAsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAgIC5vZmYgICA9IDAsICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLmltbSAgID0gSU1NIH0pCiNkZWZpbmUg
QlBGX0FMVTY0X1JFRyhPUCwgRFNULCBTUkMpICAgICAgICAgICAgIFwKICAoKHN0cnVjdCBicGZf
aW5zbikgeyAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLmNvZGUgID0gQlBGX0FMVTY0
IHwgQlBGX09QKE9QKSB8IEJQRl9YLCAgICBcCiAgICAuZHN0X3JlZyA9IERTVCwgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIFwKICAgIC5zcmNfcmVnID0gU1JDLCAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgXAogICAgLm9mZiAgID0gMCwgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICBcCiAgICAuaW1tICAgPSAwIH0pCiNkZWZpbmUgQlBGX01PVjY0X0lNTShEU1QsIElNTSkg
ICAgICAgICAgICAgICAgIFwKICAoKHN0cnVjdCBicGZfaW5zbikgeyAgICAgICAgICAgICAgICAg
ICAgICAgICAgXAogICAgLmNvZGUgID0gQlBGX0FMVTY0IHwgQlBGX01PViB8IEJQRl9LLCAgICAg
ICBcCiAgICAuZHN0X3JlZyA9IERTVCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwKICAg
IC5zcmNfcmVnID0gMCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXAogICAgLm9mZiAg
ID0gMCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcCiAgICAuaW1tICAgPSBJTU0g
fSkKCmludCBicGZfKGludCBjbWQsIHVuaW9uIGJwZl9hdHRyICphdHRycykgewogIHJldHVybiBz
eXNjYWxsKF9fTlJfYnBmLCBjbWQsIGF0dHJzLCBzaXplb2YoKmF0dHJzKSk7Cn0KCmludCBhcnJh
eV9jcmVhdGUoaW50IHZhbHVlX3NpemUsIGludCBudW1fZW50cmllcywgdW5zaWduZWQgaW50IGZs
YWdzKSB7CiAgdW5pb24gYnBmX2F0dHIgY3JlYXRlX21hcF9hdHRycyA9IHsKICAgICAgLm1hcF90
eXBlID0gQlBGX01BUF9UWVBFX0FSUkFZLAogICAgICAua2V5X3NpemUgPSA0LAogICAgICAudmFs
dWVfc2l6ZSA9IHZhbHVlX3NpemUsCiAgICAgIC5tYXhfZW50cmllcyA9IG51bV9lbnRyaWVzLAog
ICAgICAubWFwX2ZsYWdzID0gZmxhZ3MsCiAgfTsKICBpbnQgbWFwZmQgPSBicGZfKEJQRl9NQVBf
Q1JFQVRFLCAmY3JlYXRlX21hcF9hdHRycyk7CiAgaWYgKG1hcGZkID09IC0xKQogICAgZXJyKDEs
ICJtYXAgY3JlYXRlIik7CiAgcmV0dXJuIG1hcGZkOwp9Cgp2b2lkIG1hcF9mcmVlemUoaW50IGZk
KSB7CiAgdW5pb24gYnBmX2F0dHIgYXR0ciA9IHsubWFwX2ZkID0gZmR9OwogIGlmIChicGZfKEJQ
Rl9NQVBfRlJFRVpFLCAmYXR0cikpCiAgICBlcnIoMSwgImZyZWV6ZSBtYXAiKTsKfQoKaW50IHBy
b2dfbG9hZChzdHJ1Y3QgYnBmX2luc24gKmluc25zLCBzaXplX3QgaW5zbnNfY291bnQpIHsKICBj
aGFyIHZlcmlmaWVyX2xvZ1sxMDAwMDBdOwogIHVuaW9uIGJwZl9hdHRyIGNyZWF0ZV9wcm9nX2F0
dHJzID0gewogICAgLnByb2dfdHlwZSA9IEJQRl9QUk9HX1RZUEVfU09DS0VUX0ZJTFRFUiwKICAg
IC5pbnNuX2NudCA9IGluc25zX2NvdW50LAogICAgLmluc25zID0gKHVpbnQ2NF90KWluc25zLAog
ICAgLmxpY2Vuc2UgPSAodWludDY0X3QpR1BMdjIsCiAgICAubG9nX2xldmVsID0gMiwKICAgIC5s
b2dfc2l6ZSA9IHNpemVvZih2ZXJpZmllcl9sb2cpLAogICAgLmxvZ19idWYgPSAodWludDY0X3Qp
dmVyaWZpZXJfbG9nCiAgfTsKICBpbnQgcHJvZ2ZkID0gYnBmXyhCUEZfUFJPR19MT0FELCAmY3Jl
YXRlX3Byb2dfYXR0cnMpOwogIGludCBlcnJub18gPSBlcnJubzsKICBwcmludGYoIj09PT09PT09
PT09PT09PT09PT09PT09PT09XG4lcz09PT09PT09PT09PT09PT09PT09PT09PT09XG4iLCB2ZXJp
Zmllcl9sb2cpOwogIGVycm5vID0gZXJybm9fOwogIGlmIChwcm9nZmQgPT0gLTEpCiAgICBlcnIo
MSwgInByb2cgbG9hZCIpOwogIHJldHVybiBwcm9nZmQ7Cn0KCmludCBjcmVhdGVfZmlsdGVyZWRf
c29ja2V0X2ZkKHN0cnVjdCBicGZfaW5zbiAqaW5zbnMsIHNpemVfdCBpbnNuc19jb3VudCkgewog
IGludCBwcm9nZmQgPSBwcm9nX2xvYWQoaW5zbnMsIGluc25zX2NvdW50KTsKCiAgLy8gaG9vayBl
QlBGIHByb2dyYW0gdXAgdG8gYSBzb2NrZXQKICAvLyBzZW5kbXNnKCkgdG8gdGhlIHNvY2tldCB3
aWxsIHRyaWdnZXIgdGhlIGZpbHRlcgogIC8vIHJldHVybmluZyAwIGluIHRoZSBmaWx0ZXIgc2hv
dWxkIHRvc3MgdGhlIHBhY2tldAogIGludCBzb2Nrc1syXTsKICBpZiAoc29ja2V0cGFpcihBRl9V
TklYLCBTT0NLX0RHUkFNLCAwLCBzb2NrcykpCiAgICBlcnIoMSwgInNvY2tldHBhaXIiKTsKICBp
ZiAoc2V0c29ja29wdChzb2Nrc1swXSwgU09MX1NPQ0tFVCwgU09fQVRUQUNIX0JQRiwgJnByb2dm
ZCwgc2l6ZW9mKGludCkpKQogICAgZXJyKDEsICJzZXRzb2Nrb3B0Iik7CiAgcmV0dXJuIHNvY2tz
WzFdOwp9Cgp2b2lkIHRyaWdnZXJfcHJvYyhpbnQgc29ja2ZkKSB7CiAgaWYgKHdyaXRlKHNvY2tm
ZCwgIlgiLCAxKSAhPSAxKQogICAgZXJyKDEsICJ3cml0ZSB0byBwcm9jIHNvY2tldCBmYWlsZWQi
KTsKfQoKaW50IG1haW4odm9pZCkgewogIGludCBzbWFsbF9tYXAgPSBhcnJheV9jcmVhdGUoOCwg
MSwgQlBGX0ZfUkRPTkxZX1BST0d8QlBGX0ZfTU1BUEFCTEUpOwoKICBtYXBfZnJlZXplKHNtYWxs
X21hcCk7CgogIHN0cnVjdCBicGZfaW5zbiBpbnNuc1tdID0gewogICAgLy8gcjAgPSAmbWFwWzBd
CiAgICBCUEZfTERfTUFQX0ZEKEJQRl9SRUdfQVJHMSwgc21hbGxfbWFwKSwKICAgIEJQRl9NT1Y2
NF9SRUcoQlBGX1JFR19BUkcyLCBCUEZfUkVHX0ZQKSwKICAgIEJQRl9BTFU2NF9JTU0oQlBGX0FE
RCwgQlBGX1JFR19BUkcyLCAtNCksCiAgICBCUEZfU1RfTUVNKEJQRl9XLCBCUEZfUkVHX0FSRzIs
IDAsIDApLAogICAgQlBGX0VNSVRfQ0FMTChCUEZfRlVOQ19tYXBfbG9va3VwX2VsZW0pLAogICAg
QlBGX0pNUF9JTU0oQlBGX0pORSwgQlBGX1JFR18wLCAwLCAxKSwKICAgIEJQRl9FWElUX0lOU04o
KSwKCiAgICAvLyByMSA9IG1hcFswXQogICAgQlBGX0xEWF9NRU0oQlBGX0RXLCBCUEZfUkVHXzEs
IEJQRl9SRUdfMCwgMCksCgogICAgLy8gcjIgPSAqKCZtYXBbMF0gKyBtYXBbMF0pCiAgICBCUEZf
QUxVNjRfUkVHKEJQRl9BREQsIEJQRl9SRUdfMCwgQlBGX1JFR18xKSwKICAgIEJQRl9MRFhfTUVN
KEJQRl9EVywgQlBGX1JFR18yLCBCUEZfUkVHXzAsIDApLAoKICAgIEJQRl9NT1Y2NF9JTU0oQlBG
X1JFR18wLCAwKSwKICAgIEJQRl9FWElUX0lOU04oKQogIH07CiAgaW50IHNvY2tfZmQgPSBjcmVh
dGVfZmlsdGVyZWRfc29ja2V0X2ZkKGluc25zLCBBUlJTSVpFKGluc25zKSk7CgogIHVuc2lnbmVk
IGxvbmcgKm1hcHBpbmcgPSBtbWFwKE5VTEwsIDB4MTAwMCwgUFJPVF9SRUFELCBNQVBfU0hBUkVE
LCBzbWFsbF9tYXAsIDApOwogIGlmIChtYXBwaW5nID09IE1BUF9GQUlMRUQpIGVycigxLCAibW1h
cCIpOwogIGlmIChtcHJvdGVjdChtYXBwaW5nLCAweDEwMDAsIFBST1RfUkVBRHxQUk9UX1dSSVRF
KSkKICAgIGVycigxLCAibXByb3RlY3QiKTsKICAqbWFwcGluZyA9IDB4ZGVhZTAwMDAwMDAwMDAw
MDsKCiAgdHJpZ2dlcl9wcm9jKHNvY2tfZmQpOwp9Cg==
--000000000000a6d99e05a2ca6300--
